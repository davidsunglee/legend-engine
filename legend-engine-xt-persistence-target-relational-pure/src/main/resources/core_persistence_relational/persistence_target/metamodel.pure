// Copyright 2022 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::pure::persistence::metamodel::target::*;
import meta::pure::persistence::relational::metamodel::*;

Class
{doc.doc = ''}
meta::pure::persistence::relational::metamodel::RelationalTarget extends PersistenceTarget
{
  table: meta::relational::metamodel::relation::Table[1];
  milestoning: Milestoning[1];
}

Class
<<typemodifiers.abstract>>
{doc.doc = ''}
meta::pure::persistence::relational::metamodel::Milestoning
{
}

Class
{doc.doc = ''}
meta::pure::persistence::relational::metamodel::UnitemporalMilestoning extends Milestoning
{
  processingDimension: ProcessingDimension[1];
}

Class
{doc.doc = ''}
meta::pure::persistence::relational::metamodel::BitemporalMilestoning extends Milestoning
{
  processingDimension: ProcessingDimension[1];
  sourceDimension: SourceDimension[1];
}

Class
<<typemodifiers.abstract>>
{doc.doc = ''}
meta::pure::persistence::relational::metamodel::ProcessingDimension
{
}

Class
{doc.doc = ''}
meta::pure::persistence::relational::metamodel::BatchIdProcessingDimension extends ProcessingDimension
{
  batchIdIn: meta::relational::metamodel::Column[1];
  batchIdOut: meta::relational::metamodel::Column[1];
}

Class
{doc.doc = ''}
meta::pure::persistence::relational::metamodel::TimeProcessingDimension extends ProcessingDimension
{
  timeIn: meta::relational::metamodel::Column[1];
  timeOut: meta::relational::metamodel::Column[1];
}

Class
{doc.doc = ''}
meta::pure::persistence::relational::metamodel::BatchIdAndTimeProcessingDimension extends ProcessingDimension
{
  batchIdIn: meta::relational::metamodel::Column[1];
  batchIdOut: meta::relational::metamodel::Column[1];
  timeIn: meta::relational::metamodel::Column[1];
  timeOut: meta::relational::metamodel::Column[1];
}

Class
<<typemodifiers.abstract>>
{doc.doc = ''}
meta::pure::persistence::relational::metamodel::SourceDimension
{
}

Class
{doc.doc = ''}
meta::pure::persistence::relational::metamodel::TimeSourceDimension extends SourceDimension
{
  timeStart: meta::relational::metamodel::Column[1];
  timeEnd: meta::relational::metamodel::Column[1];
}
